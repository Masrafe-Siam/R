q()"
q()"
getwd();
setwd("D:\\Coding\\Git Hub code\\R")
getwd()
.libPaths()
getwd();
setwd("D:\\Coding\\Git Hub code\\R")
getwd()
getwd()
5+6
print("Hello")
7+8
var.man<-7
print(var.man)
var1<-10
var2<-20
var3<-30
cat(var1,"\t",var2,"\n",var3)
class(var1)
library(BiocManager)
install.packages("readxl")
install.packages("ggplot2")
library(ggplot2)
library(readxl)
install.packages("BiocManager")
library(BiocManager)
BiocManager::install('Biostrings')
install.packages(c("KernSmooth", "Matrix", "mgcv", "nlme", "spatial", "survival"))
library(Biostrings)
library(BiocManager)
BiocManager::install('maftools')
remotes::install_github('rstudio/shiny')
install.packages("remotes")
remotes::install_github('rstudio/shiny')
library(shiny)
library(remotes)
library(Matrix)
library(BiocVersion)
install.packages("csv")
library(csv)
install.packages("dplyr")
library(dplyr)
BiocManager::install('TCGAbiolinks')
BiocManager::install('SummarizedExperiment')
BiocManager::install('tidyverse')
BiocManager::install('pheatmap')
BiocManager::install('maftools')
library(TCGAbiolinks)
library(SummarizedExperiment)
library(dplyr)
library(tidyverse)
library(pheatmap)
library(maftools)
library(TCGAbiolinks)
library(SummarizedExperiment)
library(dplyr)
library(tidyverse)
library(pheatmap)
library(maftools)
library(TCGAbiolinks)
library(SummarizedExperiment)
library(dplyr)
library(tidyverse)
library(pheatmap)
library(maftools)
library(TCGAbiolinks)
library(SummarizedExperiment)
library(dplyr)
library(tidyverse)
library(pheatmap)
library(maftools)
#geta a list of project
gdcproject <- getGDCprojects()
getProjectSummary('TCGA-BRCA')
#build a query to retrieve gene expression
query.TCGA <- GDCquery(project = c('TCGA-BRCA'),
data.category = 'Transcriptome Profiling',
experimental.strategy = 'RNA-Seq',
workflow.type = 'STAR - Counts',
access = 'open',
barcode = c('TCGA-OL-A5D6-01A-21R-A27Q-07',
'TCGA-AN-A0FT-01A-11R-A034-07',
'TCGA-B6-A0RH-01A-21R-A115-07'))
getResults(query.TCGA)
#download data GDCdownloads
GDCdownload(query.TCGA)
dataExpression <- GDCprepare(query.TCGA)
clinicalData <- as.data.frame(colData(dataExpression))
expData <- as.data.frame(assay(dataExpression))
annotData <- as.data.frame(rowRanges(dataExpression))
write.csv(annotData, './Data/annotations.csv')
clinicalData <- as.data.frame(colData(dataExpression))
expData <- as.data.frame(assay(dataExpression))
annotData <- as.data.frame(rowRanges(dataExpression))
write.csv(annotData, './Data/annotations.csv')
write.csv(expData, "./Data/expression.csv")
